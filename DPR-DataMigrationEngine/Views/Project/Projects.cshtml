@using System.Globalization
@using System.Web.UI.WebControls
@using DPR_DataMigrationEngine.GenericHelpers
@using DPR_DataMigrationEngine.HTMLExtensionHelpers

@model DPR_DataMigrationEngine.ViewModels.ProjectViewModel
<style type="text/css">
    .ProjectEdTx {
    }

    .projectDelTx {
    }
    ul#dvpagingUl1 li, ul#firstLINK li {
        display: inline;color: maroon; text-decoration: none
    }
    .disableLinks {
        pointer-events:none;
        color: maroon;
        cursor: default;
    }

    a#btnBulkUpload:link, a#btnBulkUpload:visited, a#btnBulkUpload:active, a#btnBulkUpload:hover {
        text-decoration: none;
        background: url(/Images/next.png) 110px no-repeat green;
        -ms-background-size: 18px 18px;
        background-size: 18px 18px;
        color: #FFF;
    }
</style>
<form action="@Url.Action("AddProject", "Project")" id="fsProcessProjects" class="fsEdit" style="display: none; visibility: visible; width: 45%">
    <span class="legend22" id="lgEditProject" style="width: 100%">Add New Project</span>

    @Html.ValidationSummary(true)
    <table style="width: 100%; border: none">
        <tr>
            <td colspan="2" class="newItemTd">
                <div style="width: 100%; font-weight: bold; font-size: 8pt; display: none; visibility: visible" class="error label" id="brEdErrorProject"></div>
            </td>
        </tr>
        <tr>
            <td class="form-group" style="width: 50%">
                <div>&nbsp;</div>
                <div class="formLabel"><i style="width: auto">Project Name: </i><span style="color: red">*</span><span id="sptxtProjectName" data-valmsg-for="project.Name" style="color: red" data-valmsg-replace="true">Required</span> </div>
                <input type="text" name="project.Name" id="txtProjectName" class="form-control" />
            </td>
            <td class="form-group" style="width: 50%">
                <div>&nbsp;</div>
                <div class="formLabel"><i style="width: auto">Project Type: </i><span style="color: red">*</span><span id="spddlProjectTypes" data-valmsg-for="project.ProjectTypeId" style="color: red" data-valmsg-replace="true">Invalid Selection</span> </div>
                <select class="form-control" name="project.ProjectTypeId" id="ddlProjectTypes">
                    @{
                        var projectTypeExtensions = new ExtensionHelpers().ListOption(Model.ProjectTypes, "ProjectTypeId", "Name", "-- Select Project Type --");

                        foreach (var projectType in projectTypeExtensions.Select(projectTypeString => Html.Raw(projectTypeString)))
                        {
                            @projectType
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form-group newItemTd" style="width: 50%">
                <div>&nbsp;</div>
                <div class="formLabel"><i style="width: auto">Project Duration(Months):</i><span style="color: red">*</span><span class="field-validation-valid" id="sptxtProjectDuration" data-valmsg-for="project.Duration" style="color: red" data-valmsg-replace="true">Required</span></div>
                <input type="text" name="project.Duration" id="txtProjectDuration" class="form-control" />
            </td>
            <td class="form-group newItemTd" style="width: 50%">
                <div>&nbsp;</div>
                <div class="formLabel"><i style="width: auto">Project Cost(Million):</i><span style="color: red">*</span><span class="field-validation-valid" id="sptxtProjectCost" data-valmsg-for="project.Cost" style="color: red" data-valmsg-replace="true">Required</span></div>
                <input type="text" name="project.Cost" id="txtProjectCost" class="form-control" />
            </td>
        </tr>
        <tr>  
            <td class="form-group" style="width: 50%">
                <div class="formLabel"><i style="width: auto">Sector: </i><span style="color: red">*</span><span id="spddlProjectSector" data-valmsg-for="project.SectorId" style="color: red" data-valmsg-replace="true">Invalid Selection</span> </div>
                <select class="form-control" name="project.SectorId" id="ddlProjectSector">
                    @{
                        var sectorExtensions = new ExtensionHelpers().ListOption(Model.Sectors, "SectorId", "Name", "-- Select Sector --");

                        foreach (var sector in sectorExtensions.Select(sectorString => Html.Raw(sectorString)))
                        {
                            @sector
                        }
                    }
                </select>
            </td>
            <td class="form-group" style="width: 50%">
                <div class="formLabel"><i style="width: auto">Terrain: </i><span style="color: red">*</span><span id="spddlProjectTerrain" data-valmsg-for="project.TerrainId" style="color: red" data-valmsg-replace="true">Invalid Selection</span> </div>
                <select class="form-control" name="project.TerrainId" id="ddlProjectTerrain">
                    @{
                        var terrainExtensions = new ExtensionHelpers().ListOption(Model.Terrains, "TerrainId", "Name", "-- Select Terrain --");

                        foreach (var terrain in terrainExtensions.Select(terrainString => Html.Raw(terrainString)))
                        {
                            @terrain
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form-group" style="width: 50%">
                <div class="formLabel"><i style="width: auto">Company: </i><span style="color: red">*</span><span id="spddlProjectCompany" data-valmsg-for="project.CompanyId" style="color: red" data-valmsg-replace="true">Invalid Selection</span> </div>
                <select class="form-control" name="project.CompanyId" id="ddlProjectCompany">
                    @{
                        var companyExtensions = new ExtensionHelpers().ListOption(Model.Companies, "CompanyId", "Name", "-- Select Company --");

                        foreach (var company in companyExtensions.Select(companyString => Html.Raw(companyString)))
                        {
                            @company
                        }
                    }
                </select>
            </td>
            <td class="form-group" style="width: 50%">
                <div class="formLabel"><i style="width: auto">Date Completed: </i>@*<span style="color: red">*</span><span id="spddlProjectSector" data-valmsg-for="project.SectorId" style="color: red" data-valmsg-replace="true">Invalid Selection</span>*@ </div>
                <input type="text" class="form-control datetimepicker" name="project.DateCompleted" id="dtDateCompleted">
            </td>
        </tr>
        <tr>
            <td class="form-group newItemTd" style="width: 50%">
                
                <div class="formLabel"><i style="width: auto">Project Description:</i>@*<span style="color: red">*</span><span class="field-validation-valid" id="sptxtProjectDescription" data-valmsg-for="project.Description" style="color: red" data-valmsg-replace="true">Required</span>*@</div>
                <textarea name="project.Description" id="txtProjectDescription" class="form-control"></textarea>
            </td>
            <td class="form-group newItemTd" style="width: 50%">
                
                <div class="formLabel"><i style="width: auto">Project Objectives:</i>@*<span style="color: red">*</span><span class="field-validation-valid" id="sptxtProjectObjectives" data-valmsg-for="project.ProjectObjectives" style="color: red" data-valmsg-replace="true">Required</span>*@</div>
                <textarea name="project.ProjectObjectives" id="txtProjectObjectives" class="form-control" ></textarea>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="newItemTd">
               <div class="formLabel"><i style="width: auto">Completion Status: </i><span style="color: red">*</span><span id="spddlProjectCompletionStatus" data-valmsg-for="project.CompletionStatus" style="color: red" data-valmsg-replace="true">Invalid Selection</span> </div>
                <select class="form-control" style="height: 34px;" name="project.CompletionStatus" id="ddlProjectCompletionStatus">
                    
                </select>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="newItemTd">
                <div>&nbsp;</div>
                <div style="width: 100%; margin-left: 0">
                    <input type="button" id="btnCloseProcessProject" style="border: none; float:right; width: 110px" class="btn btnClose large" value="Close" />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    <input type="submit" id="btnProcessProject" class="btn btnSave large" style=" border: none; float: right; width: 110px" value="Submit" />
                </div>
            </td>
        </tr>
    </table>
</form>

<table style="width: 100%">
    <tr>
        <td style="width: 90%; padding-right: 8px; vertical-align: top">
            <div style="text-align: center; float: right; margin-top: 1%">
                <a id="btnBulkUpload" class="btn btnNext large" style="width: 140px; float: left" href="/Project/ProjectUpload">Bulk Upload</a>
            </div>
        </td>
        <td style="width: 10%">
            <div style="width: 100%">
                <input type="button" id="btnAddNewProject" onclick="prepareProjectTemplate()" value="Single Entry" class="btn btnAddP large" style="width: 160px; float: right" />
            </div>
        </td>
    </tr>
</table>

<fieldset id="fsProjectList" style="background: whitesmoke; width: 100%" class="allcontent">
    <legend class="customlegend22" id="lgHeader">Manage Projects</legend>
    <label id="brProjectProcess" style="display: none; visibility: visible">@ViewBag.ErrorCode</label>
    <table style="width: 100%; background: whitesmoke; border: 1px solid gainsboro; top: 10%">
        <tr>
            <td style="width: 100%">
                <div style="width: 100%; font-weight: bold; font-size: 9pt; display: none; visibility: visible" id="brFeedbackProject">@ViewBag.ErrorMessage</div>
            </td>
        </tr>
    </table>
    <table id="tblProjects" style="width: 100%; min-height: 70%" class="fils-border newTable">
        <tr class="customGridHeader">
            <th style="width: 3%; text-align: center">
                S/N
            </th>
            <th style="width: 15%; text-align: left">
                Project
            </th>
            <th style="width: 7%; text-align: left">
                Type
            </th>
            <th style="width: 7%; text-align: left">
                Duration(Months)
            </th>
            <th style="width: 10%; text-align: left">
                Cost(Million)
            </th>
            
            <th style="width: 8%; text-align: left">
                Sector
            </th>
            <th style="width: 10%; text-align: left">
                Terrain
            </th>
            <th style="width: 10%; text-align: left">
                Completion Status
            </th>
            <th style="width: 12%; text-align: left">
                Company
            </th>
            <th style="width: 12%">
                Action
            </th>
        </tr>
        @{
            for (var i = 0; i < Model.Projects.Count(); i++)
            {
                var zxz = Model.Projects[i];
                <tr id="tr@(zxz.ProjectId)" class="xtcR" style="color: black;">
                    
                        @{
                            if (zxz.ProjectId != (int)OtherNotAvailable.Not_Available)
                            {
                                <td style="width: 3%; text-align: center" class="xtc">
                                    @(i + 1)
                                </td>
                                <td style="width: 15%; text-align: left" id="tdProjectName">
                                    <a title="Manage Milestones" href="/Project/ProjectMileStones?projectId=@(zxz.ProjectId)" style="color: green; text-decoration: none; cursor: pointer"> @zxz.Name</a>
                                </td>

                            <td style="width: 10%; text-align: left" id="tdProjectTypeName">
                        @zxz.ProjectTypeName
                    </td>
                    <td style="width: 10%; text-align: left" id="tdProjectDuration">
                        @zxz.Duration
                    </td>
                    <td style="width: 10%; text-align: left" id="tdProjectCost">
                        @zxz.Cost
                    </td>
                    <td style="width: 8%; text-align: left" id="tdProjectSector">
                        @zxz.SectorName
                    </td>
                    <td style="width: 10%; text-align: left" id="tdProjectTerrainName">
                        @zxz.TerrainName
                    </td>
                    <td style="width: 10%; text-align: left" id="tdProjectCompletion">
                        @zxz.Completion
                    </td>
                    <td style="width: 12%; text-align: left" id="tdProjectCompany">
                        @zxz.CompanyName
                    </td>
                    <td style="width: 12%">
                        <a class="ProjectEdTx" title="Edit" id="ed@(zxz.ProjectId)" onclick="ProjectEdTx(this.id)"><img src="/Images/edit.png" alt="Edit" /></a><a class="projectDelTx" title="Delete" id="del@(zxz.ProjectId)" onclick="projectDelTx(this.id);"><img src="/Images/delete_opt(1).png" alt="Delete" /></a>
                    </td>


                            }

                        }
                </tr>
            }
        }
    </table>
</fieldset>

<script type="text/javascript">

    $(window).load(function ()
    {
        var dx = parseInt($('#brProjectProcess').text());

        if (dx < 0) {
            $("#brFeedbackProject").removeClass('success');
            $("#brFeedbackProject").addClass('error');
            $("#brFeedbackProject").fadeIn();
        }

        if (dx > 0) {
            $("#brFeedbackProject").removeClass('error');
            $("#brFeedbackProject").addClass('success');
            $("#brFeedbackProject").fadeIn();
        }
        
        $('#ddlProjectCompletionStatus').append($("<option />").val(0).text('-- Select Completion Status'));
        $('#ddlProjectCompletionStatus').append($("<option />").val(1).text('Completed'));
        $('#ddlProjectCompletionStatus').append($("<option />").val(2).text('Uncompleted'));
        $('#ddlProjectCompletionStatus').prop('selectedIndex', 0);
    });

    $(".page-button").click(function () {
        if (!$(this).hasClass('current')) {

            window.location.href = "http://" +
                window.location.host + window.location.pathname +
                '?page=' + $(this).val() + '&pageSize=' + 40;

        }
    });

    //$(function ()
    //{
    //    $("#ddlLimit").on('change', function ()
    //    {
    //        var pageNumber = '';

    //        var page = parseInt($('.nav-container').children('.current').val());

    //        if (page === null || page === NaN || page < 1)
    //        {
    //            pageNumber = 1;
    //        } else
    //        {
    //            pageNumber = page;
    //        }
    //        var pageSize = parseInt($("#ddlLimit").val());
    //        window.location.href = "http://" +
    //            window.location.host + window.location.pathname +
    //            '?page=' + pageNumber + '&pageSize=' + pageSize;
    //    });
    //});

    function feedBackStatus(x, z) {
        var dx = parseInt(x);

        if (dx <1) {
            $("#brFeedbackProject").text(z);
            $("#brFeedbackProject").removeClass('success');
            $("#brFeedbackProject").addClass('error');
            $("#brFeedbackProject").fadeIn();
        }

        if (dx > 0) {
            $("#brFeedbackProject").text(z);
            $("#brFeedbackProject").removeClass('error');
            $("#brFeedbackProject").addClass('success');
            $("#brFeedbackProject").fadeIn();
        }
    }

    $(document).ready(function () {
        toggleValidators('fsProcessProjects');
        toggleValidators('frmProcessProjectDocs');

        //var pageSize = parseInt(getURLParameter('pageSize'));
        //if (pageSize > 0) {
        //    $("#ddlLimit").val(pageSize);
        //}

        $('#btnCloseProcessProject').on("click", function () {
            $('#brEdErrorProject').text('');
            $('#brEdErrorProject').hide();
            closePopModal($('#fsProcessProjects'));
        });

        $("#fsProcessProjects").submit(function (e) {
            $("#brFeedbackProject").fadeOut();
            e.preventDefault();

            if (!validateTemplate('fsProcessProjects')) {
                return;
            }

            var vx = $('#txtProjectName');
            var vxx = $('#ddlProjectTypes');
            var rx = $('#txtProjectDuration');
            var rnx = $('#txtProjectCost');
            var rtxx = $('#ddlProjectSector');
            var rxtv = $('#ddlProjectTerrain');
            var rnsx = $('#ddlProjectCompany');
            var rxy = $('#dtDateCompleted');
            var rnxy = $('#txtProjectDescription');
            var rtxy = $('#txtProjectObjectives');
            var rxtvy = $('#ddlProjectCompletionStatus');

            var newProject = {};
            newProject.ProjectId = rtx;

            newProject['Name'] = vx.val();
            newProject['ProjectTypeId'] = vxx.val();
            newProject['Duration'] = rx.val();
            newProject['Cost'] = rnx.val();
            newProject['SectorId'] = rtxx.val();
            newProject['TerrainId'] = rxtv.val();
            newProject['CompanyId'] = rnsx.val();
            newProject['DateCompleted'] = rxy.val();
            newProject['Description'] = rnxy.val();
            newProject['ProjectObjectives'] = rtxy.val();
            newProject['CompletionStatus'] = rxtvy.val();

            newProject.Completion = $("#ddlProjectCompletionStatus option:selected").text();
            newProject.SectorName = $("#ddlProjectSector option:selected").text();
            newProject.TerrainName = $("#ddlProjectTerrain option:selected").text();
            newProject.CompanyName = $("#ddlProjectCompany option:selected").text();
            newProject.ProjectTypeName = $("#ddlProjectTypes option:selected").text();

            var sdx = JSON.stringify({ project: newProject });
            var url = $(this).attr('action');
            $.ajax({
                url: url,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: sdx,
                type: 'POST',
                success: function (zxz) {
                    if (zxz.ErrorCode === -1 || zxz.ErrorCode === -2 || zxz.ErrorCode === 0 || zxz.ErrorCode === -3) {
                        $('#brEdErrorProject').text(zxz.Error);
                        $('#brEdErrorProject').fadeIn('slow');
                        return;
                    }

                    if ($('#brProjectProcess').text() === "1") {
                        refresh(zxz);
                    }

                    if ($('#brProjectProcess').text() === "2") {
                        updateTable(zxz);
                    }

                    $('#brEdErrorProject').text('');
                    $('#brEdErrorProject').hide();
                }
            });
        });
    });


    var rtx = 0;
    function ProjectEdTx(x) {
        $("#brFeedbackProject").fadeOut();
        $('#brProjectProcess').text('');

        var xxid = parseInt(x.replace('ed', ''));
        if (xxid < 1) {
            alert("Invalid Selection!");
            return;
        }
        rtx = xxid;
        var url = '/Project/EditProject?id=' + xxid;

        $.get(url, function (data) {
            edGet(data);
        });

    }

    function edGet(data) {
        if (data.ErrorCode < 1) {
            //Data could not be retrieved/Database operation failed/An unknown error was encountered
            feedBackStatus(data.ErrorCode, data.Error);
            return;
        }

        refreshForm('fsProcessProjects', 'Update');

        $('#fsProcessProjects').attr("action", "/Project/EditProject");
        $('#txtProjectName').val(data.Name);
        $('#ddlProjectTypes').val(data.ProjectTypeId);
        $('#txtProjectDuration').val(data.Duration);
        $('#txtProjectCost').val(data.Cost);
        $('#ddlProjectSector').val(data.SectorId);
        $('#ddlProjectTerrain').val(data.TerrainId);
        $('#ddlProjectCompany').val(data.CompanyId);
        $('#txtProjectDescription').val(data.Description);
        $('#txtProjectObjectives').val(data.ProjectObjectives);

        $('#ddlProjectCompletionStatus').val(data.CompletionStatus);
        
        $('.datetimepicker').datetimepicker({
            value: data.DatecomPletedString,
            format: 'Y/m/d'
        });


        $('#lgEditProject').text('Update Project Information');
        $('#brProjectProcess').text(2);
        setModal($('#fsProcessProjects'));
    }

    function projectDelTx(x) {
        $("#brFeedbackProject").fadeOut();
        var xxid = parseInt(x.replace('del', ''));
        if (xxid < 1) {
            alert("Invalid Selection!");
            return;
        }

        $.ajax({
            beforeSend: function () { return confirm('Are you sure you want to delete this item?'); },
            url: "/Project/DeleteProject?id=" + xxid,
            type: 'POST',
            success: function (i) {
                if (i.ErrorCode < 1) {
                    ///Database operation failed/Data could not be deleted
                    feedBackStatus(i.ErrorCode, i.Error);
                    return;
                }

                $('#tblProjects #tr' + xxid).remove();

                //$('#tblProjects tr.xtcR').each(function (r) {
                //    $(this).children('.xtc').text(r + 1);
                //});
               
            }
        });
        return;
    }

    function prepareProjectTemplate() {
        $('#brEdErrorProject').text('');
        $('#brEdErrorProject').hide();
        refreshForm('fsProcessProjects', '');
        $('#fsProcessProjects').attr("action", "/Project/AddProject");
        $('#brProjectProcess').text(1);
        setModal($('#fsProcessProjects'));
    }

    function updateTable(r) {
        if (r.ErrorCode === -1 || r.ErrorCode === -2 || r.ErrorCode === 0 || r.ErrorCode === -3) {
            //Record could not be added/Duplicates found/a Backend validation failed
            $('#brEdErrorProject').text(r.Error);
            $('#brEdErrorProject').fadeIn('slow');
            return;
        }

        $('#tblProjects #tr' + rtx).children('#tdProjectName').html(r.Name);
        $('#tblProjects #tr' + rtx).children('#tdProjectTypeName').html(r.ProjectTypeName);
        $('#tblProjects #tr' + rtx).children('#tdProjectDuration').html(r.Duration);
        $('#tblProjects #tr' + rtx).children('#tdProjectTerrainName').html(r.TerrainName);
        $('#tblProjects #tr' + rtx).children('#tdProjectCost').html(r.Cost);
        $('#tblProjects #tr' + rtx).children('#tdProjectCompany').html(r.CompanyName);

        $('#tblProjects #tr' + rtx).children('#tdProjectSector').html(r.SectorName);
        $('#tblProjects #tr' + rtx).children('#tdProjectCompletion').html(r.Completion);

        //Successfull operation
        feedBackStatus(r.ErrorCode, r.Error);
        $('#brProjectProcess').text(0);
        closePopModal($('#fsProcessProjects'));
    }

    function refresh(r) {
        if (r.ErrorCode === -1 || r.ErrorCode === -2 || r.ErrorCode === 0 || r.ErrorCode === -3) {
            //Record could not be added/Duplicates found/a Backend validation failed
            $('#brEdErrorProject').text(r.Error);
            $('#brEdErrorProject').fadeIn('slow');
            return;
        }
        var bv = $('#tblProjects tr').length - 1;

        $("#tblProjects tbody:last").append($('<tr id="tr' + r.ProjectId + '" class="xtcR" style="color: black;">'
                   //+ '<td style="width: 3%; text-align: center" class="xtc">'
                   // + (bv + 1)
                   //+ ' </td>'
                   + ' <td style="width: 15%; text-align: left" id="tdProjectName">'
                   + '<a title="Manage Milestones" href="/Project/ProjectMileStones?projectId=' + r.ProjectId + '" style="color: green; text-decoration: none; cursor: pointer">' + r.Name + '</a>'
                   + ' </td>'
                   + ' <td style="width: 10%; text-align: left" id="tdProjectTypeName">'
                    + r.ProjectTypeName
                   + ' </td>'
                   + ' <td style="width: 10%; text-align: left" id="tdProjectDuration">'
                    + r.Duration
                   + ' </td>'
                   + ' <td style="width: 10%; text-align: left" id="tdProjectCost">'
                     + r.Cost
                   + ' </td>'
                    + '<td style="width: 8%; text-align: left" id="tdProjectSector">'
                    + r.SectorName
                   + ' </td>'
                   + ' <td style="width: 10%; text-align: left" id="tdProjectTerrainName">'
                    + r.TerrainName
                   + ' </td>'
                   + ' <td style="width: 10%; text-align: left" id="tdProjectCompletion">'
                    + r.Completion
                   + ' </td>'
                   + ' <td style="width: 12%; text-align: left" id="tdProjectCompany">'
                    + r.CompanyName
                   + ' </td>'
                   + ' <td style="width: 12%">'
                    + '<a class="ProjectEdTx" title="Edit" id="ed' + r.ProjectId + '" onclick="ProjectEdTx(this.id)"><img src="/Images/edit.png" alt="Edit" /></a>&nbsp;<a class="projectDelTx" title="Delete" id="del' + r.ProjectId + '" onclick="projectDelTx(this.id);"><img src="/Images/delete_opt(1).png" alt="Delete" /></a>'
                   + ' </td>'
               + ' </tr>'));

        //Successfull operation
        $('#brProjectProcess').text(0);
        feedBackStatus(r.ErrorCode, r.Error);
        closePopModal($('#fsProcessProjects'));
    }


    function valIdateProjectTemplate() {
        if ($('#fdProjectTemplate').val().trim().length < 1) {
            alert("Please Select an Excel file to upload!");
            $('#fdProjectTemplate').val('');
            return false;
        }

        if (!validateTemplate('frmProcessProjectDocs')) {
            $('#brEdErrorProjectBulk').text('Validation failed. Please check the input fileds and try again')
                .fadeIn();
            return false;
        }
        return true;
        // $('#btnProcessBulkUpload').unbind('click').click();
    }

    $('#btnCloseBulkProject').on("click", function () {
        closePopModal($('#frmProcessProjectDocs'));
    });

    function prepareBulkUploadTemplate() {
        //refreshForm('frmProcessProjectDocs', '');
        setModal($('#frmProcessProjectDocs'));
    }

    function downloadFile(d) {
        if (d.length < 1) {
            alert('Invalid Selection!');
            return;
        }
        $.get(d);
    }

    $('#fdProjectTemplate').on('change', validateProjectBulk);

    function validateProjectBulk(z) {
        var content = $('#fdProjectTemplate');
        var input = z.target.files;

        if (input.length > 0) {
            var extension = content.val().split('.').pop();
            // str.substring(str.lastIndexOf('~'));
            var cdg = $('#fdProjectTemplate');
            if (extension === 'xlsx' || extension === 'xls') {
                $('#spfdProjectTemplate').fadeOut();
            }
            else {
                $('#spfdProjectTemplate').fadeIn();
                cdg.val('');
            }
            return;
        }
        else {
            alert("Please select an Excel file to upload!");
        }
    }
</script>

