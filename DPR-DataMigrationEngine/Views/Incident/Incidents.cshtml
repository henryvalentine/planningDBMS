@using System.Globalization
@using DPR_DataMigrationEngine.HTMLExtensionHelpers

@model DPR_DataMigrationEngine.ViewModels.IncidentViewModel
           

<style type="text/css">
    .ProductionEdTx {
    }

    .productionDelTx {
    }

    .wellworkEdTx {
    }

    .wellworkDelTx {
    }

    .workoverDate {
    }

    a#btnBulkUpload:link, a#btnBulkUpload:visited, a#btnBulkUpload:active, a#btnBulkUpload:hover {
        text-decoration: none;
        background: url(/Images/next.png) 110px no-repeat green;
        -ms-background-size: 18px 18px;
        background-size: 18px 18px;
        color: #FFF;
    }
</style>



<form action="@Url.Action("Incidents", "Incident")" id="fsProcessIncidents" class="fsEdit" style="display: none; visibility: visible">
    <span class="legend22" id="lgEditIncident" style="width: 100%">Add New Incident</span>

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <table style="width: 100%; border: none">
        <tr>
            <td colspan="2">
                <div style="width: 100%; font-weight: bold; font-size: 8pt; display: none; visibility: visible" class="error label" id="brEdErrorIncident"></div>
            </td>
        </tr>
        <tr>
            <td class="form-group" style="width:50%">
                <div>&nbsp;</div>
                <div class="formLabel"><i style="width: auto">Incident Title:</i><span style="color: red">*</span><span id="sptxtIncidentTitle" data-valmsg-for="incidentHistory.Name" style="color: red" data-valmsg-replace="true">Required</span></div>
                <input type="text" name="incidentHistory.Name" id="txtIncidentTitle" class="form-control" />
            </td>
            <td class="form-group" style="width:50%">
                <div>&nbsp;</div>
                <div class="formLabel"><i style="width: auto">Incident Type: </i><span style="color: red">*</span><span id="spddlIncidentTypes" data-valmsg-for="incidentHistory.IncidentTypeId" style="color: red" data-valmsg-replace="true">Invalid Selection</span> </div>
                <select class="form-control" name="incidentHistory.IncidentTypeId" id="ddlIncidentTypes">
                    @{
                        var incidentTypeExtensions = new ExtensionHelpers().ListOption(Model.IncidentTypes, "IncidentTypeId", "Name", "-- Select Incident Type --");

                        foreach (var incidentType in incidentTypeExtensions.Select(incidentTypeString => Html.Raw(incidentTypeString)))
                        {
                            @incidentType
                        }
                    }
                </select>
            </td>
        </tr>  
        <tr>
            <td class="form-group" style="width:50%">
                <div class="formLabel"><i style="width: auto">Incident Location: </i><span style="color: red">*</span><span id="sptxtLocation" data-valmsg-for="incidentHistory.Location" style="color: red" data-valmsg-replace="true">Required</span> </div>
                <textarea class="form-control" style="height: 45px" id="txtLocation" name="incidentHistory.Location"></textarea>
            </td>
            <td class="form-group" style="width:50%">
                <div class="formLabel"><i style="width: auto">Incident Description:</i><span style="color: red">*</span><span id="sptxtDescription" data-valmsg-for="incidentHistory.Description" style="color: red" data-valmsg-replace="true">Required</span> </div>
                <textarea class="form-control" style="height: 45px" id="txtDescription" name="incidentHistory.Description"></textarea>
            </td>
        </tr>
        <tr> 
            <td class="form-group" style="width:50%">
                <div class="formLabel"><i style="width: auto">Incident Date:</i></div>
                <input type="text" name="incidentHistory.IncidentDate" id="dtIncidentDate" class="form-control datepicker" />
                <label id="lblDate" style="display: none"></label>
            </td> 
            <td class="form-group" style="width:50%">
                <div class="formLabel"><i style="width: auto">Company: </i><span style="color: red">*</span><span id="spddlIncidentCompanies" data-valmsg-for="incidentHistory.CompanyId" style="color: red" data-valmsg-replace="true">Invalid selection</span></div>
                <select class="form-control" name="incidentHistory.CompanyId" id="ddlIncidentCompanies">
                    @{
                        var companyExtensions = new ExtensionHelpers().ListOption(Model.Companies, "CompanyId", "Name", "-- Select Company --");

                        foreach (var company in companyExtensions.Select(incidentTypeString => Html.Raw(incidentTypeString)))
                        {
                            @company
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form-group" colspan="2">
                <div class="formLabel"><i style="width: auto">Reported By:</i></div>
                <input type="text" name="incidentHistory.ReportedBy" id="txtReportedBy" class="form-control" />
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <div>&nbsp;</div>
                <div style="width: 100%; margin-left: 0">
                    <input type="button" id="btnCloseProcessIncident" style="border: none; float:right; width: 110px" class="btn btnClose large" value="Close" />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    <input type="submit" id="btnProcessIncident" class="btn btnSave large" style=" border: none; float: right; width: 110px" value="Submit" />
                </div>
            </td>
        </tr>
    </table>
</form>


<table style="width: 100%">
    <tr>
        <td style="width: 90%;">
            <div style="text-align: center; float: right; margin-top: 1%">
                <a title="Bulk Upload" class="btn btnNext large" style="width: 140px; float: left;cursor:pointer" href="/Incident/IncidentUpload" id="btnBulkUpload">Bulk Upload</a>
            </div>

        </td>
        <td style="width: 10%">
            <div style="width: 100%">
                <input type="button" id="btnAddNewIncident" onclick="prepareIncidentTemplate()" value="Single Entry" class="btn btnAddXy large" style="width: 170px; float: right" />
            </div>
        </td>
    </tr>
</table>
<fieldset id="fsIncidentList" style="background: whitesmoke; width: 100%" class="allcontent">
    <legend class="customlegend22" id="lgHeader">@ViewBag.Title</legend>
    <label id="brIncidentFeedBackStatus" style="display: none; visibility: visible"></label>
    <table style="width: 100%; background: whitesmoke; border: 1px solid gainsboro; top: 20%">
        <tr>
            <td style="width: 70%">
                <div style="width: 100%; font-weight: bold; font-size: 9pt; display: none; visibility: visible" id="brFeedbackIncident">@ViewBag.IncidentMessage</div>
            </td>
        </tr>
    </table>
    <table id="tbIncidents" class="fils-border newTable">
        <tr class="customGridHeader">
            @*<th style="width: 5%; text-align: center">
                S/N
            </th>*@
            <th style="width: 25%; text-align: left">
                Incident
            </th>
            <th style="width: 15%; text-align: left">
                Type
            </th>
            <th style="width: 15%; text-align: left">
                Location
            </th>
            <th style="width: 10%; text-align: left">
                Incident Date
            </th>
            <th style="width: 20%; text-align: left">
                Company
            </th>
            <th style="width: 10%">
                Action
            </th>
        </tr>
        @{
            for (var i = 0; i < Model.Incidents.Count(); i++)
            {
                var zxz = Model.Incidents[i];
                <tr id="tr@(zxz.IncidentHistoryId)" class="xtcR">
                    @*<td style="width: 5%; text-align: center" class="xtc">
                        @(i + 1)
                    </td>*@
                    <td style="width: 25%; text-align: left" id="tdIncidentTitle">
                        @zxz.Title
                    </td>
                    <td style="width: 15%; text-align: left" id="tdIncidentType">
                        @zxz.IncidentTypeName
                    </td>
                    <td style="width: 15%; text-align: left" id="tdIncidentLocation">
                        @zxz.Location
                    </td>
                    <td style="width: 10%; text-align: left" id="tdIncidentDate">
                        @zxz.Date
                    </td>
                    <td style="width: 20%; text-align: left" id="tdCompany">
                        @zxz.CompanyName
                    </td>
                    <td style="width: 10%">
                        <a class="edTx" title="Edit" id="ed@(zxz.IncidentHistoryId)" onclick="edTIncident(this.id);"><img src="~/Images/edit.png" alt="Edit" /></a><a class=".delTx" title="Delete" id="del@(zxz.IncidentHistoryId)" onclick=" delTIncident(this.id);"><img src="~/Images/delete_opt(1).png" alt="Delete" /></a>
                    </td>
                </tr>
            }
        }
    </table>
   
</fieldset>

<script type="text/javascript">

    $(window).load(function () {
        //$('#tbIncidents .xtcR:even').addClass('gridItem1');
    });

    function feedBackStatus(x, z) {
        var dx = parseInt(x);

        if (dx === 0 || dx === 2 || dx === -3) {
            $("#brFeedbackIncident").text(z);
            $("#brFeedbackIncident").removeClass('success');
            $("#brFeedbackIncident").addClass('error');
            $("#brFeedbackIncident").fadeIn();
        }

        if (dx === 1) {
            $("#brFeedbackIncident").text(z);
            $("#brFeedbackIncident").removeClass('error');
            $("#brFeedbackIncident").addClass('success');
            $("#brFeedbackIncident").fadeIn();
        }
    }

    $(".page-button").click(function () {
        if (!$(this).hasClass('current')) {

            window.location.href = "http://" +
                window.location.host + window.location.pathname +
                '?page=' + $(this).val() + '&pageSize=' + 40;

        }
    });

    $(document).ready(function ()
    {
        toggleValidators('fsProcessIncidents');
        toggleValidators('frmProcessIncidentDocs');
        $('#btnCloseIncidentBulkUpload').on("click", function ()
        {
            closePopModal($('#frmProcessIncidentDocs'));
        });

        $('#btnCloseProcessIncident').on("click", function ()
        {
            $('#brEdErrorIncident').text('');
            $('#brEdErrorIncident').fadeOut('slow');
            $("#brFeedbackIncident").fadeOut();
            closePopModal($('#fsProcessIncidents'));
        });
        
        $("#fsProcessIncidents").submit(function (e)
        {
            $("#brFeedbackIncident").fadeOut();
            e.preventDefault();
            $('#brEdErrorIncident').text('');
            $('#brEdErrorIncident').fadeOut('slow');
            if (!validateTemplate('fsProcessIncidents')) {
                return;
            }
            
            if ($('#lblDate').text().length < 1 && $('#dtIncidentDate').val().length < 1) {
                alert('Please select Incident Date');
                return;
            }

            var title = $('#txtIncidentTitle');
            var type = $('#ddlIncidentTypes');
            var location = $('#txtLocation');
            //var incidentDate = $('#dtIncidentDate');
            var company = $('#ddlIncidentCompanies');
            var reporter = $('#txtReportedBy');
            var description = $('#txtDescription');
            
            var newIncident = {};
            newIncident.IncidentHistoryId = rtx;

            newIncident['Title'] = title.val();
            newIncident['IncidentTypeId'] = type.val();
            newIncident['Location'] = location.val();
            newIncident['IncidentDate'] = $('#dtIncidentDate').val();
            newIncident['Description'] = description.val();
            newIncident['CompanyId'] = company.val();
            newIncident['ReportedBy'] = reporter.val();
            
            newIncident.IncidentTypeName = $("#ddlIncidentTypes option:selected").text();
            newIncident.CompanyName = $("#ddlIncidentCompanies option:selected").text();

            var sdx = JSON.stringify({ incidentHistory: newIncident });
            var url = $(this).attr('action');
            $.ajax({
                url: url,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: sdx,
                type: 'POST',
                success: function (zxz) {
                    if (zxz.ErrorCode === -1 || zxz.ErrorCode === -2 || zxz.ErrorCode === 0 || zxz.ErrorCode === -3)
                    {
                        $('#brEdErrorIncident').text(zxz.Error);
                        $('#brEdErrorIncident').fadeIn('slow');
                        return;
                    }

                    if ($('#brIncidentFeedBackStatus').text() === "1")
                    {
                        refreshIncidentTbl(zxz);
                    }

                    if ($('#brIncidentFeedBackStatus').text() === "2")
                    {
                        updateIncidentTble(zxz);
                    }
                }
            });
        });
    });

    function validateIncidentBulkTemplate()
    {
        if ($('#fldIncidentTemplate').val().trim().length < 1)
        {
            alert("Please Select an Excel file to upload!");
            $('#fldIncidentTemplate').val('');
            return false;
        }

        if (!validateTemplate('frmProcessIncidentDocs'))
        {
            $('#brEdErrorBulkIncident').text('Validation failed. Please check the input fileds and try again')
                .fadeIn();
            return false;
        }
        return true;
     }

    var rtx = 0;

    function edTIncident(x) {
        $('#brIncidentFeedBackStatus').text('');
        $("#brFeedbackIncident").fadeOut();
        $("#brEdErrorIncident").fadeOut();
        var xxid = parseInt(x.replace('ed', ''));
        if (xxid < 1) {
            alert("Invalid Selection!");
            return;
        }
        rtx = xxid;
        var url = '/Incident/EditIncidentHistory?id=' + xxid;

        $.get(url, function (data)
        {
            edGetIncident(data);
        });

    }

    function edGetIncident(data)
    {
        if (data.ErrorCode < 1)
        {
            feedBackStatus(data.ErrorCode, data.Error);
            return;
        }

        refreshForm('fsProcessIncidents', 'Update');
        $('#fsProcessIncidents').attr("action", "/Incident/EditIncidentHistory");

        $('#txtIncidentTitle').val(data.Title);
        $('#ddlIncidentTypes').val(data.IncidentTypeId);
        $('#txtLocation').val(data.Location);
        $('#ddlIncidentCompanies').val(data.CompanyId);
        $('#txtReportedBy').val(data.ReportedBy);
        $('#txtDescription').val(data.Description);

        var newIncident = {};
        newIncident.IncidentHistoryId = rtx;

        //$('#dtIncidentDate').datetimepicker({
        //    value: data.Date,
        //    format: 'Y/m/d'
        //});
        
        $('#dtIncidentDate').datepicker("setValue", data.Date);
      
        $('#lgEditIncident').text('Update Incident');
        $('#brIncidentFeedBackStatus').text(2);
        setModal($('#fsProcessIncidents'));
    }

    function getIncidentDate() {
        $('#lblDate').text($('#dtIncidentDate').val());
    }

    function delTIncident(x)
    {
        $("#brFeedbackIncident").fadeOut();
        
        var xxid = parseInt(x.replace('del', ''));
        if (xxid < 1)
        {
            alert("Invalid Selection!");
            return;
        }

        $.ajax({
            beforeSend: function ()
            {
                 return confirm('Are you sure you want to delete this item?');
            },
            url: "/Incident/DeleteIncident?id=" + xxid,
            type: 'POST',
            success: function (i) {
                if (i.ErrorCode < 1)
                {
                    //Database operation failed/Data could not be deleted
                    feedBackStatus(i.ErrorCode, i.Error);
                    return;
                }

                $('#tbIncidents #tr' + xxid).remove();

                //$('#tbIncidents tr.xtcR').each(function (r) {
                //    $(this).children('.xtc').text(r + 1);
                //});
                //$('#tbIncidents .xtcR:even').addClass('gridItem1');
            }
        });
        return;
    }

    function prepareIncidentTemplate() {
        refreshForm('fsProcessIncidents', '');
        $('#fsProcessIncidents').attr("action", "/Incident/AddIncidentHistory");
        $('#brIncidentFeedBackStatus').text(1);
        setModal($('#fsProcessIncidents'));
    }

    function prepareIncidentBulkUploadTemplate() {
        refreshForm('frmProcessIncidentDocs', '');
        setModal($('#frmProcessIncidentDocs'));
    }
    
    function updateIncidentTble(r)
    {
        //tdIncidentTitle tdIncidentType tdIncidentLocation tdIncidentDate tdCompany

        $('#tbIncidents #tr' + rtx).children('#tdIncidentTitle').html(r.Title);
        $('#tbIncidents #tr' + rtx).children('#tdIncidentType').html(r.IncidentTypeName);
        $('#tbIncidents #tr' + rtx).children('#tdIncidentLocation').html(r.Location);
        $('#tbIncidents #tr' + rtx).children('#tdIncidentDate').html(r.Date);
        $('#tbIncidents #tr' + rtx).children('#tdCompany').html(r.CompanyName);
        
        //Successfull operation
        feedBackStatus(r.ErrorCode, r.Error);
        $('#brIncidentFeedBackStatus').text(0);
        closePopModal($('#fsProcessIncidents'));
    }

    function refreshIncidentTbl(r)
    {
        var bv = $('#tbIncidents tr').length - 1;

        $("#tbIncidents tbody:last").append($('<tr id="tr' + r.IncidentHistoryId + '" class="xtcR">'
                   ////+ '<td style="width: 5%; text-align: center" class="xtc">'
                   ////+  (bv + 1)
                   ////+ ' </td>'
                   + ' <td style="width: 25%; text-align: left" id="tdIncidentTitle">'
                   +   r.Title
                   + ' </td>'
                   + ' <td style="width: 15%; text-align: left" id="tdIncidentType">'
                   + r.IncidentTypeName
                   + ' </td>'
                   + ' <td style="width: 15%; text-align: left" id="tdIncidentLocation">'
                   + r.Location
                   + ' </td>'
                   + ' <td style="width: 10%; text-align: left" id="tdIncidentDate">'
                   + r.Date
                   + ' </td>'
                   + ' <td style="width: 20%; text-align: left" id="tdCompany">'
                   + r.CompanyName
                   + ' </td>'
                   + ' <td style="width: 10%">'
                   + '<a class="edTx" title="Edit" id="ed(r.IncidentHistoryId)" onclick="edTIncident(this.id);"><img src="~/Images/edit.png" alt="Edit" /></a><a class=".delTx" title="Delete" id="del(r.IncidentHistoryId)" onclick=" delTIncident(this.id);"><img src="~/Images/delete_opt(1).png" alt="Delete" /></a>'
                   + '</td>'
                   + '</tr>'));

        //Successfull operation
      
        $('#brIncidentFeedBackStatus').text(0);
        feedBackStatus(r.ErrorCode, r.Error);
        closePopModal($('#fsProcessIncidents'));
    }

    function prepareIncidentBulkUploadTemplate() {
        refreshForm('frmProcessIncidentDocs', '');
        setModal($('#frmProcessIncidentDocs'));
    }

    function downloadBulkIncidentTemplate(d) {
        if (d.length < 1) {
            alert('Invalid Selection!');
            return;
        }
        $.get(d);
    }

    $('#fldIncidentTemplate').on('change', validatenBulkTemplate);

    function validatenBulkTemplate(z) {
        var content = $('#fldIncidentTemplate');
        var input = z.target.files;

        if (input.length > 0)
        {
            var extension = content.val().split('.').pop();
            // str.substring(str.lastIndexOf('~'));
            var cdg = $('#fldIncidentTemplate');
            if (extension === 'xlsx' || extension === 'xls')
            {
                $('#spfldIncidentTemplate').fadeOut();
            }
            else {
                $('#spfldIncidentTemplate').fadeIn();
                cdg.val('');
            }
            return;
        }
        else {
            alert("Please select an Excel file to upload!");
        }
    }

</script>



