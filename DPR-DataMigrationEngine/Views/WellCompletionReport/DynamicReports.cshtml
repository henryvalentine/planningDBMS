@using DPR_DataMigrationEngine.HTMLExtensionHelpers

@model DPR_DataMigrationEngine.ViewModels.WellCompletionViewModel

<style type="text/css">
    a {
        color: whitesmoke;
        text-decoration: underline;
    }

        a:hover {
            color: whitesmoke;
            text-decoration: underline;
        }
        .xzcComp 
        {
           display: none; 
            visibility: visible; 
            max-height: 70%
        }
</style>

<form class="fsEdit xxc xzcComp"  id="dvSelectCompletionReportFields">
    <legend class="legend22" style="width: 100%; cursor: pointer">Select Report Query Criteria</legend>
    <table style="width: 100%">
        <tr>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Company: </i> </div>
                <select class="form-control" name="queryBuilder.CompanyId" id="ddlWellCompletionDynamicComp">
                    @{
                        var companyExtensions = new ExtensionHelpers().ListOption(Model.Companies, "CompanyId", "Name", "< All >");

                        foreach (var company in companyExtensions.Select(companyString => Html.Raw(companyString)))
                        {
                            @company
                        }
                    }
                </select>
            </td>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Well: </i> </div>
                <select class="form-control" name="queryBuilder.WellId" id="ddlWellCompletionDynamicWell">
                    @{
                        var wells = new ExtensionHelpers().ListOption(Model.WellObjects, "WellId", "Name", "< All >");

                        foreach (var well in wells.Select(wellString => Html.Raw(wellString)))
                        {
                            @well
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Well Type: </i> </div>
                <select class="form-control" name="queryBuilder.FieldId" id="ddlWellCompletionDynamicWellType">
                    @{
                        var wellTypes = new ExtensionHelpers().ListOption(Model.WellTypes, "WellTypeId", "Title", "< All >");

                        foreach (var wellType in wellTypes.Select(wellTypeString => Html.Raw(wellTypeString)))
                        {
                            @wellType
                        }
                    }
                </select>
            </td>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Well Class: </i> </div>
                <select class="form-control" name="queryBuilder.WellClassId" id="ddlWellCompletionDynamicWellClass">
                    @{
                        var wellClasses = new ExtensionHelpers().ListOption(Model.WellClasses, "WellClassId", "Name", "< All >");

                        foreach (var wellClass in wellClasses.Select(wellClassString => Html.Raw(wellClassString)))
                        {
                            @wellClass
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Well Completion Type: </i> </div>
                <select class="form-control" name="queryBuilder.CompletionTypeId" id="ddlWellCompletionDynamicReason">
                    @{
                        var blockTypes = new ExtensionHelpers().ListOption(Model.WellCompletionTypes, "WellCompletionTypeId", "Type", "< All >");

                        foreach (var blockType in blockTypes.Select(blockTypeString => Html.Raw(blockTypeString)))
                        {
                            @blockType
                        }
                    }
                </select>
            </td>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Equipment: </i> </div>
                <select class="form-control" name="queryBuilder.EquipmentId" id="ddlWellCompletionDynamicEquipment">
                    @{
                        var equipments = new ExtensionHelpers().ListOption(Model.Equipments, "EquipmentId", "Name", "< All >");

                        foreach (var equipment in equipments.Select(equipmentString => Html.Raw(equipmentString)))
                        {
                            @equipment
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Terrain: </i> </div>
                <select class="form-control" name="queryBuilder.TerrainId" id="ddlWellCompletionDynamicTerrain">
                    @{
                        var terrains = new ExtensionHelpers().ListOption(Model.Terrains, "TerrainId", "Name", "< All >");

                        foreach (var terrain in terrains.Select(terrainString => Html.Raw(terrainString)))
                        {
                            @terrain
                        }
                    }
                </select>
            </td>
            <td class="form-group" style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Zone: </i> </div>
                <select class="form-control" name="queryBuilder.ZoneId" id="ddlWellCompletionDynamicZone">
                    @{
                        var zones = new ExtensionHelpers().ListOption(Model.Zones, "ZoneId", "Name", "< All >");

                        foreach (var zone in zones.Select(zoneString => Html.Raw(zoneString)))
                        {
                            @zone
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <div style="width: 100%; margin-top: 1%; margin-bottom: 1%">
                    <span style="color: brown">Query Range</span>
                </div>
            </td> 
        </tr>
        <tr>
            <td style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">Start Date: </i> </div>
                <div style="width: 100%; margin-left: 0">
                    <input type="text" name="queryBuilder.StartDate" id="completionStartDate" class="form-control datepicker" />
                </div>
            </td>
            <td style="width: 50%">
                <div style="margin-left: 2%"><i style="width: auto">End Date: </i> </div>
                <div style="width: 100%; margin-left: 0">
                    <input type="text" name="queryBuilder.EndDate" id="completionEndDate" class="form-control datepicker" />
                </div>
            </td>
        </tr>

        <tr>
            <td colspan="2">
                <div style="width: 100%; margin-left: 0; margin-top: 1%">
                    <input type="button" id="btnCloseRepField" style="border: none; float:right; width: 110px" class="btn btnClose large" value="Close" onclick="closeWellCompletionRepFields()" />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    <input type="button" id="btnProcessRepField" class="btn btnUpdate large" style=" border: none; float: right; width: 110px" value="Generate Rport" onclick="generateWellCompletionReports();" />
                </div>
            </td>
        </tr>
    </table>
</form>



<table style="width: 100%">
    <tr>
        <td style="padding-right:0; width: 30%">
            <div style="margin-left: 2%"><i style="width: auto">Use a previous query: </i> </div>
            <select class="form-control" name="queryBuilder.WellCompletionQueryId" id="ddlWellCompletionPreviousQueries">
                @{
                    var previousQueries = new ExtensionHelpers().ListOption(Model.WellCompletionQueries, "WellCompletionQueryId", "WellCompletionQueryName", "-- Select Previous Query --");

                    foreach (var wellCompletionQuery in previousQueries.Select(previousQuerString => Html.Raw(previousQuerString)))
                    {
                        @wellCompletionQuery
                    }
                }
            </select>
        </td>
        <td style="padding-right:0; width: 7%">
            <div>&nbsp;</div>
            <div style="text-align: center; float: left">
                <input type="button" id="btnGetPreviousReports" onclick=" generateWellCompletionReports2()" class="btn btnGetPrevQuery large" style="width: 190px; float: right; text-decoration: none" value="Go" />
            </div>
        </td>
        <td style="padding-right:0; width: 10%">
            <div>&nbsp;</div>
            <div style="text-align: center; float: left">
                <input type="button" id="btnGetReports" onclick=" prepWellCompletionRepFiledsTemplate()" class="btn btnGetRepFields large" style="width: 190px; float: right; text-decoration: none" value="Select Query Criteria" />
            </div>
        </td>
        <td style="padding-right:0; width: 5%">
            <div>&nbsp;</div>
            <a onclick="tableToExcel('tbWellCompletionReports', 'Well Cmpletion Report')"><img src="/Images/export2Excel2.jpg" style="float: right; margin-right: -2%; cursor: pointer" title="Export to Excel" /></a>
        </td>
        <td style="padding-right:0;width: 5%">
            <div>&nbsp;</div>
            <img src="/Images/printer-24_opt.png" style="float: left; cursor: pointer" title="Print Report" onclick="printWellCompletionReport()" />
        </td>
    </tr>
</table>

<img src="/Images/ProgressLoader.gif" id="imgWellCompletionRepoSpin" class="spinProgress" />

<form class="fsEdit xxc" style="display: none; visibility: visible; margin-left: 2%" id="frmSaveWellCompletionQuery">
    <legend class="legend22" style="width: 100%">Save report query</legend>
    <table style="width: 100%">
        <tr>
            <td>
                <div style="width: 100%">
                    <div style="margin-left: 5px"><i style="width: auto">Query Name:</i></div>
                    <input type="text" name="queryName" id="txtWellCompletionQueryName" class="form-control" />
                </div>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <div>&nbsp;</div>
                <div style="width: 100%; margin-left: 0">
                    <input type="button" id="dft" style="border: none; float:right; width: 110px" class="btn btnClose large" value="Cancel" onclick="closeWellCompletionQuery()" />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    <input type="button" id="sxd" class="btn btnUpdate large" style=" border: none; float: right; width: 110px" value="Save" onclick="saveWellCompletionReportQuery();" />
                </div>
            </td>
        </tr>
    </table>
</form>

<fieldset style="width: 100%" id="dvWellCompletionRep">
     <legend class="customlegend22" id="lgHeader">Well Completion Report<span style="float: right"><a id="ancSaveWellCompletionQuery" onclick="showWellCompletionQuerySaver()" style="display:none">Save Query</a></span></legend>
</fieldset>

<script type="text/javascript">
    

    $(window).load(function () {
        getCompWells();

    });
    var comptx = 0;

    function getCompWells() {
        
        if (comptx > 0) {
            clearTimeout(getCompWells);
            getCompWells = null;
        }
        var url = '/WellCompletionReport/GetMoreWells';
        $.ajax({
            url: url,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            success: function (zxz) {
                if (zxz.length < 1) {
                    comptx = 1;
                    clearTimeout(getCompWells);
                    getCompWells = null;
                    return;
                }
                else {
                    populateWellCompDynamicWell(zxz);
                    setTimeout(getCompWells, 2000);
                }
            }
        });

    }


    
    function populateWellCompDynamicWell(data)
    {
        if (data == null || data.length < 1) {
            return;
        }

        $.each(data, function (i, v) {
            $('#ddlWellCompletionDynamicWell').append($("<option />").val(v.WellId).text(v.Name));
        });
    }


    function printWellCompletionReport() {
        if ($('#tbWellCompletionReports').html() == null)
        {

            alert('Nothing to Print');
            return;
        }
        $('#ancSaveWellCompletionQuery').css({ 'display': 'none' });
        printReportData('dvWellCompletionRep');
    }

    function generateWellCompletionReports() {
        //tm.val().trim().toLowerCase().replace(/ /g, '');

        var cId1 = parseInt($('#ddlWellCompletionDynamicWell').val());
        var cId2 = parseInt($('#ddlWellCompletionDynamicWellClass').val());
        var cId3 = parseInt($('#ddlWellCompletionDynamicWellType').val());
        var cId4 = parseInt($('#ddlWellCompletionDynamicReason').val());
        var cId5 = parseInt($('#ddlWellCompletionDynamicEquipment').val());
        var cId6 = parseInt($('#ddlWellCompletionDynamicTerrain').val());
        var cId7 = parseInt($('#ddlWellCompletionDynamicZone').val());
        var cId8 = $('#completionStartDate').val();
        var cId9 = parseInt($('#ddlWellCompletionDynamicComp').val());
        var cId10 = $('#completionEndDate').val();

        if (cId1 < 1 && cId2 < 1 && cId3 < 1 && cId4 < 1 && cId5 < 1 && cId6 < 1 && cId7 < 1 && cId8.length < 1 && cId9 < 1 && cId10.length < 1)
        {
            alert('Please select at least one query criteria.');
            $('#frmSaveWellCompletionQuery').hide('fast');
            return;
        }
        
        if (cId8.length < 1 && cId10.length > 1) {
            alert('Please select a starte Date.');
            $('#frmSaveWellCompletionQuery').hide('fast');
            return;
        }

        var tdc = {};

        //
        tdc['WellId'] = cId1;
        tdc['WellClassId'] = cId2;
        tdc['WellTypeId'] = cId3;
        tdc['CompletionTypeId'] = cId4;
        tdc['EquipmentId'] = cId5;
        tdc['TerrainId'] = cId6;
        tdc['ZoneId'] = cId7;
        tdc['StartDate'] = cId8;
        tdc['CompanyId'] = cId9;
        tdc['EndDate'] = cId10;
        
        var sdx = JSON.stringify({ queryBuilder: tdc });

        closeWellCompletionRepFields();
        $('#frmSaveWellCompletionQuery').fadeOut('fast');
        WellCompletionSaverAncHide();
        setModal2($('#imgWellCompletionRepoSpin'));

        var url = '/WellCompletionReport/GetWellCompletions';

        $.ajax({
            async: true,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: sdx,
            type: "POST",
            url: url,
            success: function (r) {
                WellCompletionQueryStatus = 0;
                buildWellCompletionReport(r);
            }
            ,
            error: function ()
            {
                closePopModal($('#imgWellCompletionRepoSpin'));
                $('#frmSaveWellCompletionQuery').hide('fast');
            }
        });
    }

    function generateWellCompletionReports2() {

        var cId = parseInt($('#ddlWellCompletionPreviousQueries').val().trim());

        if (cId < 1) {
            alert('Please select a valid query.');
            return;
        }

        var sdx = JSON.stringify({ queryId: cId });

        closeWellCompletionRepFields();
        setModal2($('#imgWellCompletionRepoSpin'));

        var url = '/WellCompletionReport/GetWellCompletions2';

        $.ajax({
            async: true,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: sdx,
            type: "POST",
            url: url,
            success: function (r) {
                WellCompletionQueryStatus = 1;
                buildWellCompletionReport(r);
            }
        });

    }

    var WellCompletionQueryStatus = 0;

    function prepWellCompletionRepFiledsTemplate() {
        setModal($('#dvSelectCompletionReportFields'));
    }

    function closeWellCompletionRepFields() {
        closePopModal($('#dvSelectCompletionReportFields'));
    }

    function closeWellCompletionQuery() {
        closePopModal($('#frmSaveWellCompletionQuery'));
    }

    function WellCompletionSaverAncHide() {
        $('#ancSaveWellCompletionQuery').fadeOut('slow');
    }

    function WellCompletionSaverAncShow() {
        $('#ancSaveWellCompletionQuery').fadeIn('slow');
    }

    function showWellCompletionQuerySaver() {
        $('#txtWellCompletionQueryName').val('');
        setModal($('#frmSaveWellCompletionQuery'));
    }

    function saveWellCompletionReportQuery() {
        var query = $('#txtWellCompletionQueryName').val().trim();
        if (query.length < 1) {
            alert('Please kindly provide a name for the query.');
            return;
        }

        var sdx = JSON.stringify({ queryName: query });
        var url = '/WellCompletionReport/SaveSuccessfulQuery';

        $.ajax({
            async: true,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: sdx,
            type: "POST",
            url: url,
            success: function (r) {
                if (r.Code < 1) {
                    alert(r.Error);
                    return;
                }

                if (r.Code > 0) {
                    refreshPreviousWellCompletionQueryDropdown(r.Code);
                    alert(r.Error);
                    closeWellCompletionQuery();
                    WellCompletionSaverAncHide();
                    return;
                }
            }
        });

    }

    function refreshPreviousWellCompletionQueryDropdown(k) {
        if (k < 1) {
            alert('An error was encountered. Previous Query list could not be refreshed.');
            return;
        }

        $('#ddlWellCompletionPreviousQueries option[value = 0]').text('-- Select Previous Query --');

        $('#ddlWellCompletionPreviousQueries').append($("<option />").val(k).text($('#txtWellCompletionQueryName').val().trim()));

    }

    function buildWellCompletionReport(data)
    {
        if (data.length < 1)
        {
            closePopModal($('#imgWellCompletionRepoSpin'));
            alert('No record found');
            return;
        }

        $('#tbWellCompletionReports').remove();

        var headerStr = '<table class="newTable allcontent" id="tbWellCompletionReports">' +
            '<tr class="customGridHeader"><th>S/N</th><th>Company</th>' +
            '<th >Well</th><th >Well Type</th><th >Well Class</th>'
            + '<th >Terrain</th><th >Zone</th> <th >Completion Interval(s)</th> <th >Completion Type</th>'
            + '<th >Date Completed</th><th >Equipment Used</th></tr>';
        var rowStr = '';
        var bv = 0;
        $.each(data, function (i, r) {
            bv = bv + 1;
            rowStr += '<tr ><td style="width: auto; text-align: left">' + bv + '</td><td style="width: auto; text-align: left">' 
                + r.CompanyName
                + '</td><td style="width: auto; text-align: left">' + r.WellName + '</td>'
                + '<td style="width: auto; text-align: left">' + r.WellTypeName + '</td>'
                + '<td style="width: auto; text-align: left">' + r.WellClassName + '</td>'
                + '<td style="width: auto; text-align: left">' + r.TerrainName
                + '</td><td style="width: auto; text-align: left">' + r.ZoneName + '</td>'
                + '<td style="width: auto; text-align: left">' + r.CompletionIntervalStr
                + '</td><td style="width: auto; text-align: left" >' + r.WellCompletionTypeName
                + '</td><td style="width: auto; text-align: left">' + r.DatecomPletedString + '</td>'
                + '<td style="width: auto; text-align: left" >' + r.EquipmentName
                + '</td></tr>';

        }); 

        $("#dvWellCompletionRep").append($(headerStr + rowStr + '</table>'));
        closePopModal($('#imgWellCompletionRepoSpin'));
        retrivedWellCompletionReports = data;
        IsWellCompletionQueryExisting();
    }

    function IsWellCompletionQueryExisting() {
        var url = '/WellCompletionReport/IsWellCompletionQueryExisting';

        $.ajax({
            async: true,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: "POST",
            url: url,
            success: function (r) {
                if (r.Code < 1) {
                    if (WellCompletionQueryStatus < 1) {
                        WellCompletionSaverAncShow();
                    }
                    if (WellCompletionQueryStatus > 0) {
                        WellCompletionSaverAncHide();
                    }
                    return;
                }

                if (r.Code > 0) {
                    WellCompletionSaverAncHide();
                    return;
                }
            }
        });
    }

    var retrivedWellCompletionReports = [];
</script>