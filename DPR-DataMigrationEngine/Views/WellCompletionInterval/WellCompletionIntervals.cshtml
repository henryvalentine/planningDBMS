@using DPR_DataMigrationEngine.HTMLExtensionHelpers
@model Tuple<List<DPR_DataMigrationEngine.EF.Models.WellCompletion>, List<DPR_DataMigrationEngine.EF.Models.WellCompletionInterval>>
<style type="text/css">    
    .wellCompIntDelTx{}
    .wellCompIntEdTx{}
</style>
<form action="@Url.Action("AddWellCompletionInterval", "WellCompletionInterval")" id="fsWellCompletionInterval" class="fsEdit" style="display: none; visibility: visible">
    <span class="legend22" id="lgEditWell" style="width: 100%">Add New Well Completion Interval</span>

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <table style="width: 100%; border: none">
        <tr>
            <td>
                <div style="width: 100%; font-weight: bold; font-size: 8pt; display: none; visibility: visible" class="error label" id="brEdError"></div>
            </td>
        </tr>
        <tr>
            <td class="form-group">
                <div>&nbsp;</div>
                <div style="margin-left: 2%"><i style="width: auto">Well Completion: </i><span style="color: red">*</span><span id="spddlWells" data-valmsg-for="wellCompletionInterval.WellId" style="color: red" data-valmsg-replace="true">Invalid Selection</span> </div>
                <select class="form-control" name="wellCompletionInterval.WellId" id="ddlWells">
                    @{
                        var wellExtensions = new ExtensionHelpers().ListOption(Model.Item1, "WellCompletionId", "WellName", "-- Select Well Completion --");

                        foreach (var well in wellExtensions.Select(wellString => Html.Raw(wellString)))
                        {
                            @well
                        }
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td class="form-group">
                <div style="margin-left: 2%"><i style="width: auto">Lower Interval: </i><span style="color: red">*</span><span id="sptxtLowerInterval" data-valmsg-for="wellCompletionInterval.LowerInterval" style="color: red" data-valmsg-replace="true">Required</span> </div>
                <input type="text" name="wellCompletionInterval.LowerInterval" id="txtLowerInterval" class="form-control" />
            </td>
        </tr>
        <tr>
            <td class="form-group">
                <div style="margin-left: 2%"><i style="width: auto">Upper Interval: </i><span style="color: red">*</span><span id="sptxtUpperInterval" data-valmsg-for="wellCompletionInterval.UpperInterval" style="color: red" data-valmsg-replace="true">Required</span> </div>
                <input type="text" name="wellCompletionInterval.UpperInterval" id="txtUpperInterval" class="form-control" />
            </td>  
        </tr>
        <tr>
            <td class="form-group">
                <div style="margin-left: 5px"><i style="width: auto">Date Completed</i><span style="color: red">*</span><span class="field-validation-valid" id="spdtDateCompleted" data-valmsg-for="wellCompletionInterval.DateCompleted" style="color: red" data-valmsg-replace="true">Required</span></div>
                <input type="date" name="wellCompletionInterval.DateCompleted" id="dtDateCompleted" class="form-control datetimepicker" />
            </td>
        </tr> 
        <tr>
            <td>
                <div style="width: 100%; margin-left: 0">
                    <input type="button" id="btnCloseProcessWellCompletionInterval" style="border: none; float:right; width: 110px" class="btn btnClose large" value="Close" />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    <input type="submit" id="btnProcessWellCompletionInterval" class="btn btnSave large" style=" border: none; float: right; width: 110px" value="Submit" />
                </div>
            </td>
        </tr>
    </table>
</form>

<fieldset id="fsWellList" style="background: whitesmoke; width: 100%" class="allcontent">
    <legend class="customlegend22" id="lgHeader">@ViewBag.Title</legend>
    <label id="brProcess" style="display: none; visibility: visible"></label>
    <table style="width: 100%; background: whitesmoke; border: 1px solid gainsboro; top: 20%">
        <tr>
            <td style="width: 80%">
                <div style="width: 100%; font-weight: bold; font-size: 9pt; display: none; visibility: visible" id="brFeedback"></div>
            </td>
            <td style="width: 20%">
                <div style="width: 100%">
                    <input type="button" id="btnAddWellCompletionInterval" onclick="prepareWellCompletionIntervalTemplate()" value="Well Completion Interval" class="btn btnAdd large" style="width: 200px; float: right" />
                </div>
            </td>
        </tr>
    </table>
    <table id="tblWellCompletionIntervals" style="width: 100%" class="fils-border newTable">
        <tr class="customGridHeader">
            <th style="width: 5%; text-align: center">
                S/N
            </th>
            <th style="width: 35%; text-align: left">
                Well
            </th>
            <th style="width: 15%; text-align: left">
                Lower Interval
            </th>
            <th style="width: 15%; text-align: left">
                Upper Interval
            </th>
            <th style="width: 20%; text-align: left">
                Date Completed
            </th>
            <th style="width: 10%">
                Action
            </th>
        </tr>
        @{
            for (var i = 0; i < Model.Item2.Count(); i++)
            {
                var zxz = Model.Item2[i];
                <tr id="tr@(zxz.WellCompletionIntervalId)" class="xtcR" style="color: black;">
                    <td style="width: 5%; text-align: center" class="xtc">
                        @(i + 1)
                    </td>
                    <td style="width: 35%; text-align: left" id="tdWell">
                        @zxz.WellName
                    </td>
                    <td style="width: 15%; text-align: left" id="tdLowerLimit">
                        @zxz.LowerInterval
                    </td>
                    <td style="width: 15%; text-align: left" id="tdUpperLimit">
                        @zxz.UpperInterval
                    </td>
                    <td style="width: 20%; text-align: left" id="tdDateCompleted">
                        @zxz.DatecomPletedString
                    </td>
                    <td style="width: 10%">
                        <a class="wellCompIntEdTx" title="Edit" id="ed@(zxz.WellCompletionIntervalId)" onclick="wellCompIntEdTx(this.id)"><img src="/Images/edit.png" alt="Edit" /></a>&nbsp;&nbsp;<a class="wellCompIntDelTx" title="Delete" id="del@(zxz.WellCompletionIntervalId)" onclick="wellCompIntDelTx(this.id);"><img src="/Images/delete_opt(1).png" alt="Delete" /></a>
                    </td>
                </tr>
            }
        }
    </table>
</fieldset>

<script type="text/javascript">

    $(window).load(function () {
      
    });

    function feedBackStatus(x, z) {
        var dx = parseInt(x);

        if (dx === 0 || dx === 2 || dx === -3) {
            $("#brFeedback").text(z);
            $("#brFeedback").removeClass('success');
            $("#brFeedback").addClass('error');
            $("#brFeedback").fadeIn();
        }

        if (dx === 1) {
            $("#brFeedback").text(z);
            $("#brFeedback").removeClass('error');
            $("#brFeedback").addClass('success');
            $("#brFeedback").fadeIn();
        }
    }

    $(document).ready(function () {
        toggleValidators('fsWellCompletionInterval');

   
        $('#btnCloseProcessWellCompletionInterval').on("click", function () {
            $("#brFeedback").fadeOut();
            closePopModal($('#fsWellCompletionInterval'));
        });

        $("#fsWellCompletionInterval").submit(function (e) {
            $("#brFeedback").fadeOut();
            e.preventDefault();

            if (!validateTemplate('fsWellCompletionInterval')) {
                return;
            }

            var rnx = $('#ddlWells');
            var rxx = $('#txtLowerInterval');
            var rxvx = $('#txtUpperInterval');
            var rdvx = $('#dtDateCompleted');

            var newWellCompletionInterval = {};
            newWellCompletionInterval.WellCompletionIntervalId = rtx;

            newWellCompletionInterval['WellCompletionId'] = rnx.val();
            newWellCompletionInterval['UpperInterval'] = rxvx.val();
            newWellCompletionInterval['LowerInterval'] = rxx.val();
            newWellCompletionInterval['DateCompleted'] = rdvx.val();

            newWellCompletionInterval.WellName = $("#ddlWells option:selected").text();
          
            var sdx = JSON.stringify({ wellCompletionInterval: newWellCompletionInterval });
            var url = $(this).attr('action');
            $.ajax({
                url: url,
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: sdx,
                type: 'POST',
                success: function (zxz) {
                    if (zxz.ErrorCode === -1 || zxz.ErrorCode === -2 || zxz.ErrorCode === 0 || zxz.ErrorCode === -3) {
                        $('#brEdError').text(zxz.Error);
                        $('#brEdError').fadeIn('slow');
                        return;
                    }

                    if ($('#brProcess').text() === "1") {
                        refresh(zxz);
                    }

                    if ($('#brProcess').text() === "2") {
                        updateTable(zxz);
                    }
                }
            });
        });
    });

    var rtx = 0;

    function wellCompIntEdTx(x) {
        $("#brFeedback").fadeOut();
        $('#brProcess').text('');

        var xxid = parseInt(x.replace('ed', ''));
        if (xxid < 1) {
            alert("Invalid Selection!");
            return;
        }
        rtx = xxid;
        var url = '/WellCompletionInterval/EditWellCompletionInterval?id=' + xxid;

        $.get(url, function (data) {
            edGet(data);
        });

    }

    function edGet(data) {
        if (data.ErrorCode < 1) {
            //Data could not be retrieved/Database operation failed/An unknown error was encountered
            feedBackStatus(data.ErrorCode, data.Error);
            return;
        }

        refreshForm('fsWellCompletionInterval', 'Update');
        $('#fsWellCompletionInterval').attr("action", "/WellCompletionInterval/EditWellCompletionInterval");
        
        $('#ddlWells').val(data.WellCompletionId);
        $('#txtLowerInterval').val(data.LowerInterval);
        $('#txtUpperInterval').val(data.UpperInterval);

        $('#dtDateCompleted').datepicker("setValue", data.DatecomPletedString);

      $('#lgEditWell').text('Update Well Completion Interval');
        $('#brProcess').text(2);
        setModal($('#fsWellCompletionInterval'));
    }

    function wellCompIntDelTx(x) {
        $("#brFeedback").fadeOut();
        var xxid = parseInt(x.replace('del', ''));
        if (xxid < 1) {
            alert("Invalid Selection!");
            return;
        }

        $.ajax({
            beforeSend: function () { return confirm('Are you sure you want to delete this item?'); },
            url: "/WellCompletionInterval/DeleteWellCompletionInterval?id=" + xxid,
            type: 'POST',
            success: function (i) {
                if (i.ErrorCode < 1) {
                    //Database operation failed/Data could not be deleted
                    feedBackStatus(i.ErrorCode, i.Error);
                    return;
                }

                $('#tblWellCompletionIntervals #tr' + xxid).remove();

                $('#tblWellCompletionIntervals tr.xtcR').each(function (r)
                {
                    $(this).children('.xtc').text(r + 1);
                });
                
            }
        });
        return;
    }

    function prepareWellCompletionIntervalTemplate()
    {
        refreshForm('fsWellCompletionInterval', '');
        $('#fsWellCompletionInterval').attr("action", "/WellCompletionInterval/AddWellCompletionInterval");
        $('#brProcess').text(1);
        setModal($('#fsWellCompletionInterval'));
    }

    function updateTable(r)
    {
        $('#tblWellCompletionIntervals #tr' + rtx).children('#tdWell').html(r.WellName);
        $('#tblWellCompletionIntervals #tr' + rtx).children('#tdLowerLimit').html(r.LowerInterval);
        $('#tblWellCompletionIntervals #tr' + rtx).children('#tdUpperLimit').html(r.UpperInterval);
        $('#tblWellCompletionIntervals #tr' + rtx).children('#tdDateCompleted').html(r.DateCompleted);
        
        //$('#tblWellCompletionIntervals .xtcR:even').addClass('gridItem1');
        //Successfull operation
        feedBackStatus(r.ErrorCode, r.Error);
        $('#brProcess').text(0);
        closePopModal($('#fsWellCompletionInterval'));
    }

    function refresh(r)
    {
        var bv = $('#tblWellCompletionIntervals tr').length - 1;

        $("#tblWellCompletionIntervals tbody:last").append($('<tr id="tr' + r.WellCompletionIntervalId + '" class="xtcR" style="color: black;"><td style="width: 5%; text-align: center" class="xtc">' + (bv + 1)
            + '</td><td style="width: 35%; text-align: left" id="tdWell">' + r.WellName
            + '</td><td style="width: 15%; text-align: left" id="tdLowerLimit">' + r.LowerInterval
            + '</td><td style="width: 15%; text-align: left" id="tdUpperLimit">' + r.UpperInterval
            + '<td style="width: 20%; text-align: left" id="tdDateCompleted">' + r.DateCompleted
            + '</td></td></td><td style="width: 10%"><a class="wellCompIntEdTx" title="Edit" id="ed' + r.WellCompletionIntervalId + '" alt="Edit" /><img src="/Images/edit.png" alt="Edit" /></a>&nbsp;&nbsp;'
            + '<a class="wellCompIntDelTx" title="Delete" id="del' + r.WellCompletionIntervalId + '"  onclick="wellCompIntDelTx(this.id);"><img src="/Images/delete_opt(1).png" alt="Delete" /></a></td></tr>'));

        //Successfull operation
     
        $('#brProcess').text(0);
        feedBackStatus(r.ErrorCode, r.Error);
        closePopModal($('#fsWellCompletionInterval'));
    }
</script>

