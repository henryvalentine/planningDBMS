@using System.Security.Claims
@using System.Threading
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()
    
    <ul class="nav navbar-nav navbar-right">
        <li>
            @*@Html.ActionLink("Hello " + @ViewBag.Identity + "!", "Manage", "Account", routeValues: null, htmlAttributes: new { title = "Manage" })*@
           @{
        //var context = new ApplicationDbContext();
        //var store = new UserStore<ApplicationUser>(context);
        //var userManager = new UserManager<ApplicationUser>(store);
        //var userId = HttpContext.Current.GetOwinContext().Request.User.Identity.GetUserId();

        //if (!string.IsNullOrEmpty(userId))
        //{
            //var cUser = userManager.FindById(userId);
            var user = (ClaimsPrincipal)Thread.CurrentPrincipal;
            
                <a href="/Account/Manage" title="Manage"> Welcome,&nbsp; @user.Identity.Name </a>
            
        //}
           }
             
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
